[{"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\App.js":"1","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\community_feed.js":"2","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\helper_add.js":"3","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\index.js":"4","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\index.js":"5","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\admin\\index.js":"6","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\services\\firebaseConfig.js":"7","C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\post_add.js":"8"},{"size":438,"mtime":1606546801235,"results":"9","hashOfConfig":"10"},{"size":3740,"mtime":1606549494991,"results":"11","hashOfConfig":"10"},{"size":4239,"mtime":1606544071837,"results":"12","hashOfConfig":"10"},{"size":1239,"mtime":1606546212539,"results":"13","hashOfConfig":"10"},{"size":168,"mtime":1606512785036,"results":"14","hashOfConfig":"10"},{"size":510,"mtime":1606512785030,"results":"15","hashOfConfig":"10"},{"size":483,"mtime":1606512785037,"results":"16","hashOfConfig":"10"},{"size":9754,"mtime":1606547536038,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xt6shn",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\App.js",[],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\community_feed.js",["36","37"],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\helper_add.js",["38","39","40","41","42","43","44"],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\index.js",[],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\index.js",[],["45","46"],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\admin\\index.js",[],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\services\\firebaseConfig.js",[],"C:\\Users\\lenzd\\OneDrive\\Documents\\GitHub\\instahelp\\src\\client\\post_add.js",["47","48","49","50"],"import React, { Component } from 'react'\r\nimport firebase from '../services/firebaseConfig'\r\n\r\nclass Post_Add extends Component {\r\n    state = {\r\n        // To Fetch\r\n        provinces: [],\r\n\r\n        // To Input\r\n        photo: '',\r\n        priority: '',\r\n        photo_proof: '',\r\n        name: '',\r\n        category: '',\r\n        province: '',\r\n        address: '',\r\n        condition: '',\r\n        type: '',\r\n        total_amount: '',\r\n        voluntary_type: '',\r\n        contact: ''\r\n    }\r\n\r\n    componentDidMount = _ => this.provinces_fetch()\r\n\r\n    // General\r\n    handleChange = event => {\r\n\t\tevent.preventDefault()\r\n\t\tconst {name, value} = event.target\r\n\t\tthis.setState({ [name]: value })\r\n    }\r\n\r\n    handleChange_Button = (event, state, state_value) => {\r\n        event.preventDefault()\r\n        this.setState({ [state]: state_value })\r\n    }\r\n\r\n    handleChange_Photos = event => {\r\n        event.preventDefault()\r\n        this.setState({ \r\n            photo: URL.createObjectURL(event.target.files[0]),\r\n            photo_proof: event.target.files[0]\r\n        })\r\n    }\r\n    \r\n    sortArray = (array) => {\r\n\t    return array.sort((a, b) => {\r\n\t        var x = a\r\n\t        var y = b\r\n\t        return ((x > y) ? 1 : ((x < y) ? -1 : 0));\r\n\t    })\r\n    }\r\n\r\n    clear = _ => {\r\n        this.setState({\r\n            photo: '',\r\n            priority: '',\r\n            photo_proof: '',\r\n            name: '',\r\n            category: '',\r\n            province: '',\r\n            address: '',\r\n            condition: '',\r\n            type: '',\r\n            total_amount: '',\r\n            voluntary_type: '',\r\n            contact: ''\r\n        })\r\n    }\r\n\r\n    timestamp = _ => {\r\n        let newDate = new Date()\r\n        \r\n        let month = newDate.getMonth() + 1;\r\n        let dateToday = newDate.getDate();\r\n        let year = newDate.getFullYear();\r\n        let hour = newDate.getHours();\r\n        let mins = newDate.getMinutes();\r\n        let sec = newDate.getSeconds();\r\n\r\n        return (month < 10 ? (year + '-' + '0' + month) : year + '-' + month) + \"-\" + (dateToday < 10 ? ('0' + dateToday) : dateToday) + \" \" + (hour < 10 ? ('0' + hour) : hour) + \":\" + (mins < 10 ? ('0' + mins) : mins) + \":\" + (sec < 10 ? ('0' + sec) : sec)\r\n    }\r\n    \r\n    // Fetch\r\n    provinces_fetch = _ => {\r\n        firebase.database().ref('locations').once('value', snapshot => {\r\n            snapshot.forEach((snap) => {\r\n                this.setState({ provinces: this.state.provinces.concat(snap.key) })\r\n            })\r\n        })\r\n    }\r\n    \r\n    // Add\r\n    post_add = event => {\r\n        event.preventDefault()\r\n\r\n        const { priority, name, category, province, address, condition, type, total_amount, voluntary_type, contact } = this.state\r\n\r\n        const add = _ => {\r\n            let id = this.timestamp()\r\n\r\n            let confirm = window.confirm(\"Are you sure you would like to publish this entry?\")\r\n            if (confirm) {\r\n                firebase.database().ref('posts').child(id).update({\r\n                    priority: priority,\r\n                    name: name,\r\n                    category: category,\r\n                    province: province,\r\n                    address: address,\r\n                    condition: condition,\r\n                    type: type,\r\n                    total_amount: total_amount,\r\n                    voluntary_type: voluntary_type,\r\n                    contact: contact,\r\n                    date: id\r\n                })\r\n\r\n                this.photo_add(id)\r\n                this.clear()\r\n            }\r\n        }\r\n        \r\n        if (priority.trim() !== '' && name.trim() !== '' && category.trim() !== '' && province.trim() !== '' && address.trim() !== '' && condition.trim() !== '' && type.trim() !== '' && contact.trim() !== '') {\r\n            if (type === 'Monetary' && Number.isNaN(parseInt(total_amount)) || Number.isNaN(parseInt(contact))) {\r\n                alert(\"Kindly only input numbers in the price and contact number field.\")\r\n            }\r\n            else {\r\n                if (type === 'Monetary' && parseInt(total_amount) > 0) add()\r\n                else if (type === 'Voluntary' && voluntary_type.trim() !== '') add()\r\n                else alert(\"Kindly fill in all input fields.\")\r\n            }\r\n        }\r\n        else alert(\"Kindly fill in all input fields.\")\r\n    }\r\n\r\n    photo_add = async id_num => {\r\n        const data = new FormData()\r\n    \r\n        data.append('file', this.state.photo_proof)\r\n        data.append('upload_preset', 'instahelp')\r\n        data.append('tags', [id_num])\r\n        const response = await fetch('https://api.cloudinary.com/v1_1/instahelp/image/upload', { method: 'POST', body: data })\r\n        const photo = await response.json()\r\n    \r\n        firebase.database().ref('posts').child(id_num).update({\r\n            photo: photo.secure_url\r\n        })\r\n    }\r\n\r\n    // Render\r\n    type_extended = _ => {\r\n        const { type, total_amount, voluntary_type } = this.state\r\n\r\n        if (type === 'Monetary') {\r\n            return (\r\n                <div>\r\n                    <p>P</p>\r\n                    <input type=\"text\" value={total_amount.trim()} name=\"total_amount\" onChange={this.handleChange} placeholder=\"10000.00\" />\r\n                </div>\r\n            )\r\n        }\r\n        else if (type === 'Voluntary') {\r\n            return (\r\n                <div>\r\n                    <button style={{ backgroundColor: voluntary_type === 'Rescue' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'voluntary_type', 'Rescue')}>Rescue</button>\r\n                    <button style={{ backgroundColor: voluntary_type === 'Rebuild' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'voluntary_type', 'Rebuild')}>Rebuild</button>\r\n                    <button style={{ backgroundColor: voluntary_type === 'Cleanup' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'voluntary_type', 'Rebuild')}>Rebuild</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { photo, priority, name, category, province, provinces, address, condition, type, contact } = this.state\r\n\r\n        return (\r\n            <section id=\"post_form\">\r\n                <form id=\"post_add\">\r\n\r\n                    <div>\r\n                        <p>Photo of Situation</p>\r\n                        <input type=\"file\" onChange={this.handleChange_Photos} class=\"fileInput\" />\r\n                        <img src={photo} style={{ width: '200px' }} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Priority</p>\r\n                        <button style={{ backgroundColor: priority === 'High' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'priority', 'High')}>High</button>\r\n                        <button style={{ backgroundColor: priority === 'Medium' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'priority', 'Medium')}>Medium</button>\r\n                        <button style={{ backgroundColor: priority === 'Low' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'priority', 'Low')}>Low</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Name of Contact Person</p>\r\n                        <input type=\"text\" value={name} name=\"name\" onChange={this.handleChange} placeholder=\"ex. Juan Dela Cruz\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Category of Concern</p>\r\n                        <button style={{ backgroundColor: category === 'Individual' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'category', 'Individual')}>Individual</button>\r\n                        <button style={{ backgroundColor: category === 'Community' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'category','Community')}>Community</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Location of Help Needed</p>\r\n                        <select value={province} name=\"province\" onChange={this.handleChange}>\r\n                            <option value=\"\">- Province -</option>\r\n                            { this.sortArray(provinces).map(item => <option value={item}>{item}</option>) }\r\n                        </select>\r\n                        <input type=\"text\" value={address} name=\"address\" onChange={this.handleChange} placeholder=\"Specific Address\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Condition (What do you need help with?)</p>\r\n                        <input type=\"text\" value={condition} name=\"condition\" onChange={this.handleChange} placeholder=\"ex. Hospital fund for father with stage 4 cancer\" />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p>Type of Help Needed</p>\r\n                        <button style={{ backgroundColor: type === 'Monetary' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'type', 'Monetary')}>Monetary</button>\r\n                        <button style={{ backgroundColor: type === 'Voluntary' ? 'black' : 'grey' }} onClick={event => this.handleChange_Button(event, 'type', 'Voluntary')}>Voluntary</button>\r\n\r\n                        { this.type_extended() }\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input type=\"text\" value={contact.trim()} name=\"contact\" onChange={this.handleChange} placeholder=\"ex. 09989034569\" />\r\n                    </div>\r\n\r\n                    <button onClick={this.post_add}>PUBLISH ENTRY</button>\r\n\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post_Add",{"ruleId":"51","severity":1,"message":"52","line":64,"column":27,"nodeType":"53","messageId":"54","endLine":64,"endColumn":32},{"ruleId":"55","severity":1,"message":"56","line":69,"column":21,"nodeType":"57","endLine":69,"endColumn":46},{"ruleId":"51","severity":1,"message":"58","line":45,"column":43,"nodeType":"53","messageId":"54","endLine":45,"endColumn":52},{"ruleId":"51","severity":1,"message":"59","line":45,"column":54,"nodeType":"53","messageId":"54","endLine":45,"endColumn":71},{"ruleId":"51","severity":1,"message":"60","line":45,"column":74,"nodeType":"53","messageId":"54","endLine":45,"endColumn":97},{"ruleId":"51","severity":1,"message":"61","line":45,"column":99,"nodeType":"53","messageId":"54","endLine":45,"endColumn":115},{"ruleId":"51","severity":1,"message":"62","line":45,"column":117,"nodeType":"53","messageId":"54","endLine":45,"endColumn":139},{"ruleId":"51","severity":1,"message":"63","line":45,"column":158,"nodeType":"53","messageId":"54","endLine":45,"endColumn":170},{"ruleId":"55","severity":1,"message":"56","line":66,"column":25,"nodeType":"57","endLine":66,"endColumn":59},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":81,"column":42,"nodeType":"70","messageId":"71","endLine":81,"endColumn":43},{"ruleId":"72","severity":1,"message":"73","line":124,"column":37,"nodeType":"74","messageId":"75","endLine":124,"endColumn":39},{"ruleId":"72","severity":1,"message":"73","line":124,"column":77,"nodeType":"74","messageId":"75","endLine":124,"endColumn":79},{"ruleId":"55","severity":1,"message":"56","line":183,"column":25,"nodeType":"57","endLine":183,"endColumn":71},"no-unused-vars","'posts' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'provinces' is assigned a value but never used.","'birth_certificate' is assigned a value but never used.","'birth_certificate_photo' is assigned a value but never used.","'dti_registration' is assigned a value but never used.","'dti_registration_photo' is assigned a value but never used.","'areas_served' is assigned a value but never used.","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]